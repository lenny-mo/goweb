<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>runtime.callers.func1 (3 samples, 0.03%)</title><rect x="1103.8" y="405" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1106.80" y="415.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.01%)</title><rect x="1085.7" y="277" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1088.67" y="287.5" ></text>
</g>
<g >
<title>math/rand.(*lockedSource).Int63 (43 samples, 0.42%)</title><rect x="105.8" y="421" width="5.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="108.85" y="431.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (131 samples, 1.29%)</title><rect x="86.3" y="229" width="15.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="89.33" y="239.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (42 samples, 0.41%)</title><rect x="49.0" y="325" width="4.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="52.04" y="335.5" ></text>
</g>
<g >
<title>time.Time.appendFormat (1 samples, 0.01%)</title><rect x="1136.0" y="357" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1138.98" y="367.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.02%)</title><rect x="1185.9" y="501" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1188.93" y="511.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeTimeLayout (1 samples, 0.01%)</title><rect x="1136.0" y="405" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1138.98" y="415.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendTime (1 samples, 0.01%)</title><rect x="1134.1" y="405" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1137.12" y="415.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1187.0" y="485" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1189.98" y="495.5" ></text>
</g>
<g >
<title>runtime.unlock2 (223 samples, 2.20%)</title><rect x="489.2" y="357" width="25.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="492.23" y="367.5" >r..</text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.01%)</title><rect x="16.0" y="325" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="19.04" y="335.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.JSON.Render (2 samples, 0.02%)</title><rect x="16.0" y="437" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="19.04" y="447.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (17 samples, 0.17%)</title><rect x="1099.4" y="325" width="2.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1102.38" y="335.5" ></text>
</g>
<g >
<title>net/http.Header.Clone (1 samples, 0.01%)</title><rect x="16.2" y="389" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="19.16" y="399.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (14 samples, 0.14%)</title><rect x="1136.1" y="533" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1139.09" y="543.5" ></text>
</g>
<g >
<title>encoding/json.interfaceEncoder (1 samples, 0.01%)</title><rect x="16.0" y="341" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="19.04" y="351.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.01%)</title><rect x="1138.0" y="389" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1140.95" y="399.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (672 samples, 6.62%)</title><rect x="23.5" y="437" width="78.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="26.48" y="447.5" >go_web_ap..</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.multiCore.Check (1 samples, 0.01%)</title><rect x="1103.4" y="453" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1106.45" y="463.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (27 samples, 0.27%)</title><rect x="98.4" y="149" width="3.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="101.41" y="159.5" ></text>
</g>
<g >
<title>runtime.puintptr.ptr (1 samples, 0.01%)</title><rect x="1169.9" y="517" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.90" y="527.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1 samples, 0.01%)</title><rect x="1134.2" y="357" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1137.24" y="367.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Int63 (1 samples, 0.01%)</title><rect x="110.8" y="421" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="113.84" y="431.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (2 samples, 0.02%)</title><rect x="206.7" y="325" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="209.69" y="335.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (331 samples, 3.26%)</title><rect x="536.4" y="325" width="38.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="539.39" y="335.5" >run..</text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.05%)</title><rect x="1085.1" y="261" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1088.09" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.01%)</title><rect x="16.0" y="373" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="19.04" y="383.5" ></text>
</g>
<g >
<title>runtime.osyield (2,412 samples, 23.75%)</title><rect x="206.9" y="357" width="280.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="209.92" y="367.5" >runtime.osyield</text>
</g>
<g >
<title>syscall.Read (23 samples, 0.23%)</title><rect x="10.0" y="469" width="2.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (13 samples, 0.13%)</title><rect x="1137.7" y="533" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1140.72" y="543.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (1 samples, 0.01%)</title><rect x="1134.2" y="341" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1137.24" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="16.3" y="437" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="19.27" y="447.5" ></text>
</g>
<g >
<title>math/rand.Intn (8,623 samples, 84.90%)</title><rect x="101.7" y="469" width="1001.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="104.66" y="479.5" >math/rand.Intn</text>
</g>
<g >
<title>go_web_app/router.quickSort (171 samples, 1.68%)</title><rect x="81.7" y="245" width="19.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="84.68" y="255.5" ></text>
</g>
<g >
<title>runtime.gentraceback (4 samples, 0.04%)</title><rect x="1137.7" y="453" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1140.72" y="463.5" ></text>
</g>
<g >
<title>go.uber.org/zap/buffer.(*Buffer).AppendByte (1 samples, 0.01%)</title><rect x="1135.7" y="389" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1138.75" y="399.5" ></text>
</g>
<g >
<title>time.Time.Format (1 samples, 0.01%)</title><rect x="1136.0" y="389" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1138.98" y="399.5" ></text>
</g>
<g >
<title>runtime.semawakeup (220 samples, 2.17%)</title><rect x="489.6" y="341" width="25.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="492.57" y="351.5" >r..</text>
</g>
<g >
<title>runtime.scanstack.func1 (2 samples, 0.02%)</title><rect x="1138.0" y="437" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1140.95" y="447.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (223 samples, 2.20%)</title><rect x="489.2" y="373" width="25.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="492.23" y="383.5" >r..</text>
</g>
<g >
<title>runtime.nanotime1 (3 samples, 0.03%)</title><rect x="1139.5" y="517" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1142.46" y="527.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Load (1 samples, 0.01%)</title><rect x="1170.4" y="517" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1173.37" y="527.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.01%)</title><rect x="1186.9" y="469" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1189.86" y="479.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).WriteHeaderNow (1 samples, 0.01%)</title><rect x="16.2" y="405" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="19.16" y="415.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.01%)</title><rect x="1187.3" y="485" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1190.33" y="495.5" ></text>
</g>
<g >
<title>runtime.goyield_m (2 samples, 0.02%)</title><rect x="1139.2" y="549" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1142.23" y="559.5" ></text>
</g>
<g >
<title>time.Time.appendFormat (1 samples, 0.01%)</title><rect x="1134.1" y="325" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1137.12" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (1 samples, 0.01%)</title><rect x="1138.2" y="453" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1141.19" y="463.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.01%)</title><rect x="1104.0" y="341" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1107.03" y="351.5" ></text>
</g>
<g >
<title>strconv.genericFtoa (1 samples, 0.01%)</title><rect x="1135.5" y="325" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1138.51" y="335.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*lockedWriteSyncer).Write (10 samples, 0.10%)</title><rect x="1134.4" y="437" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1137.35" y="447.5" ></text>
</g>
<g >
<title>runtime.gcDrain (13 samples, 0.13%)</title><rect x="1137.7" y="517" width="1.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1140.72" y="527.5" ></text>
</g>
<g >
<title>runtime.nanotime (45 samples, 0.44%)</title><rect x="169.2" y="389" width="5.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="172.16" y="399.5" ></text>
</g>
<g >
<title>syscall.syscall (10 samples, 0.10%)</title><rect x="1134.4" y="373" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1137.35" y="383.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (569 samples, 5.60%)</title><rect x="35.4" y="389" width="66.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="38.44" y="399.5" >go_web_..</text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.WriteJSON (2 samples, 0.02%)</title><rect x="16.0" y="421" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="19.04" y="431.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (1 samples, 0.01%)</title><rect x="1088.0" y="277" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1091.00" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.03%)</title><rect x="1187.4" y="485" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1190.44" y="495.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*CheckedEntry).reset (1 samples, 0.01%)</title><rect x="1103.4" y="421" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1106.45" y="431.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendFloat64 (1 samples, 0.01%)</title><rect x="1135.5" y="357" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1138.51" y="367.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (35 samples, 0.34%)</title><rect x="82.3" y="229" width="4.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="85.26" y="239.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddString (2 samples, 0.02%)</title><rect x="1135.7" y="405" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1138.75" y="415.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (10 samples, 0.10%)</title><rect x="97.2" y="149" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="100.25" y="159.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (3,444 samples, 33.91%)</title><rect x="115.3" y="405" width="400.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="118.26" y="415.5" >sync.(*Mutex).lockSlow</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.ISO8601TimeEncoder (1 samples, 0.01%)</title><rect x="1134.1" y="389" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1137.12" y="399.5" ></text>
</g>
<g >
<title>runtime.preemptall (1 samples, 0.01%)</title><rect x="1187.3" y="517" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1190.33" y="527.5" ></text>
</g>
<g >
<title>runtime.ready (30 samples, 0.30%)</title><rect x="1084.6" y="293" width="3.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1087.63" y="303.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (39 samples, 0.38%)</title><rect x="26.5" y="405" width="4.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="29.50" y="415.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.01%)</title><rect x="1138.1" y="373" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1141.07" y="383.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (3 samples, 0.03%)</title><rect x="1170.0" y="501" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1173.02" y="511.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.02%)</title><rect x="1189.8" y="501" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1192.77" y="511.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (9 samples, 0.09%)</title><rect x="93.4" y="181" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="96.41" y="191.5" ></text>
</g>
<g >
<title>runtime.pidleget (2 samples, 0.02%)</title><rect x="1087.5" y="245" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1090.53" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall (14 samples, 0.14%)</title><rect x="1136.1" y="485" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1139.09" y="495.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (4 samples, 0.04%)</title><rect x="1185.7" y="533" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1188.70" y="543.5" ></text>
</g>
<g >
<title>runtime.park_m (398 samples, 3.92%)</title><rect x="1139.5" y="549" width="46.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1142.46" y="559.5" >runt..</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1185.8" y="501" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1188.82" y="511.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.01%)</title><rect x="1187.1" y="453" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1190.10" y="463.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.01%)</title><rect x="16.2" y="373" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="19.16" y="383.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (502 samples, 4.94%)</title><rect x="43.2" y="357" width="58.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="46.23" y="367.5" >go_web..</text>
</g>
<g >
<title>go_web_app/router.partition (50 samples, 0.49%)</title><rect x="43.2" y="341" width="5.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="46.23" y="351.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.consoleEncoder.EncodeEntry (1 samples, 0.01%)</title><rect x="1136.0" y="437" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1138.98" y="447.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (452 samples, 4.45%)</title><rect x="49.0" y="341" width="52.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="52.04" y="351.5" >go_we..</text>
</g>
<g >
<title>go_web_app/router.quickSort (646 samples, 6.36%)</title><rect x="26.5" y="421" width="75.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="29.50" y="431.5" >go_web_a..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1169.8" y="485" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1172.79" y="495.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (9,360 samples, 92.15%)</title><rect x="16.0" y="501" width="1087.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="19.04" y="511.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.01%)</title><rect x="488.8" y="357" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="491.76" y="367.5" ></text>
</g>
<g >
<title>strconv.ryuFtoaShortest (1 samples, 0.01%)</title><rect x="1135.5" y="309" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1138.51" y="319.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).check (6 samples, 0.06%)</title><rect x="1103.4" y="469" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1106.45" y="479.5" ></text>
</g>
<g >
<title>all (10,157 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddTime (1 samples, 0.01%)</title><rect x="1134.1" y="421" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1137.12" y="431.5" ></text>
</g>
<g >
<title>go_web_app/router.pingHandler (734 samples, 7.23%)</title><rect x="16.4" y="469" width="85.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="19.39" y="479.5" >go_web_app..</text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.01%)</title><rect x="174.4" y="389" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="177.39" y="399.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2,627 samples, 25.86%)</title><rect x="181.9" y="373" width="305.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="184.94" y="383.5" >runtime.lockWithRank</text>
</g>
<g >
<title>runtime.unlock2 (6 samples, 0.06%)</title><rect x="1086.0" y="261" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1089.02" y="271.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (3 samples, 0.03%)</title><rect x="1186.9" y="549" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1189.86" y="559.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (26 samples, 0.26%)</title><rect x="23.5" y="421" width="3.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="26.48" y="431.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (2 samples, 0.02%)</title><rect x="1138.0" y="421" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1140.95" y="431.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (607 samples, 5.98%)</title><rect x="31.0" y="405" width="70.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="34.03" y="415.5" >go_web_..</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1169.8" y="517" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1172.79" y="527.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (5 samples, 0.05%)</title><rect x="101.0" y="101" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.97" y="111.5" ></text>
</g>
<g >
<title>go.uber.org/zap/buffer.Pool.Get (1 samples, 0.01%)</title><rect x="1134.2" y="389" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1137.24" y="399.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.01%)</title><rect x="1088.1" y="293" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1091.11" y="303.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (9,641 samples, 94.92%)</title><rect x="16.0" y="549" width="1120.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.04" y="559.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>runtime.kevent (237 samples, 2.33%)</title><rect x="1142.3" y="485" width="27.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1145.25" y="495.5" >r..</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendDuration (1 samples, 0.01%)</title><rect x="1135.5" y="389" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1138.51" y="399.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.01%)</title><rect x="101.5" y="325" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="104.55" y="335.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.ISO8601TimeEncoder (1 samples, 0.01%)</title><rect x="1136.0" y="421" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1138.98" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.01%)</title><rect x="16.0" y="389" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="19.04" y="399.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (14 samples, 0.14%)</title><rect x="1187.4" y="517" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.44" y="527.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (8 samples, 0.08%)</title><rect x="100.6" y="117" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="103.62" y="127.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Uint64 (19 samples, 0.19%)</title><rect x="111.0" y="421" width="2.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="113.96" y="431.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (6 samples, 0.06%)</title><rect x="1086.0" y="277" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1089.02" y="287.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.01%)</title><rect x="174.3" y="357" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="177.27" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).safeAddString (1 samples, 0.01%)</title><rect x="1135.9" y="373" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1138.86" y="383.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.01%)</title><rect x="1141.1" y="501" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1144.09" y="511.5" ></text>
</g>
<g >
<title>runtime.osyield (11 samples, 0.11%)</title><rect x="1187.8" y="501" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1190.79" y="511.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (18 samples, 0.18%)</title><rect x="487.1" y="373" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="490.13" y="383.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (34 samples, 0.33%)</title><rect x="1084.3" y="309" width="3.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1087.28" y="319.5" ></text>
</g>
<g >
<title>go_web_app/logger.GinLogger.func1 (281 samples, 2.77%)</title><rect x="1103.4" y="501" width="32.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1106.45" y="511.5" >go..</text>
</g>
<g >
<title>go_web_app/router.quickSort (74 samples, 0.73%)</title><rect x="92.9" y="197" width="8.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.95" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (128 samples, 1.26%)</title><rect x="1170.8" y="501" width="14.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1173.83" y="511.5" ></text>
</g>
<g >
<title>math/rand.(*lockedSource).source (3 samples, 0.03%)</title><rect x="110.5" y="405" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="113.49" y="415.5" ></text>
</g>
<g >
<title>syscall.Write (10 samples, 0.10%)</title><rect x="1134.4" y="405" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1137.35" y="415.5" ></text>
</g>
<g >
<title>runtime.convT (1 samples, 0.01%)</title><rect x="16.3" y="453" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="19.27" y="463.5" ></text>
</g>
<g >
<title>runtime.gentraceback (3 samples, 0.03%)</title><rect x="1103.8" y="389" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1106.80" y="399.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (23 samples, 0.23%)</title><rect x="10.0" y="485" width="2.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>runtime.unlock2 (131 samples, 1.29%)</title><rect x="1170.5" y="517" width="15.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1173.48" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.01%)</title><rect x="101.5" y="437" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="104.55" y="447.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.01%)</title><rect x="1141.1" y="453" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1144.09" y="463.5" ></text>
</g>
<g >
<title>runtime.newstack (5 samples, 0.05%)</title><rect x="1185.7" y="549" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1188.70" y="559.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.01%)</title><rect x="489.1" y="357" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="492.11" y="367.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (709 samples, 6.98%)</title><rect x="19.2" y="453" width="82.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.18" y="463.5" >go_web_ap..</text>
</g>
<g >
<title>runtime.markroot (5 samples, 0.05%)</title><rect x="1137.7" y="501" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1140.72" y="511.5" ></text>
</g>
<g >
<title>syscall.syscall (23 samples, 0.23%)</title><rect x="10.0" y="437" width="2.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.01%)</title><rect x="1140.3" y="501" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1143.28" y="511.5" ></text>
</g>
<g >
<title>runtime.semasleep (335 samples, 3.30%)</title><rect x="536.2" y="341" width="38.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="539.16" y="351.5" >run..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.01%)</title><rect x="101.5" y="357" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="104.55" y="367.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (179 samples, 1.76%)</title><rect x="489.6" y="325" width="20.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="492.57" y="335.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.01%)</title><rect x="16.0" y="357" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="19.04" y="367.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int31n (20 samples, 0.20%)</title><rect x="103.5" y="437" width="2.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="106.52" y="447.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (10 samples, 0.10%)</title><rect x="514.0" y="325" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="516.97" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (3 samples, 0.03%)</title><rect x="1186.9" y="501" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1189.86" y="511.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (1 samples, 0.01%)</title><rect x="1138.1" y="389" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1141.07" y="399.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.multiCore.Enabled (2 samples, 0.02%)</title><rect x="1103.6" y="453" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1106.57" y="463.5" ></text>
</g>
<g >
<title>syscall.Write (28 samples, 0.28%)</title><rect x="12.8" y="469" width="3.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="15.79" y="479.5" ></text>
</g>
<g >
<title>runtime.unlock2 (119 samples, 1.17%)</title><rect x="1088.2" y="357" width="13.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1091.23" y="367.5" ></text>
</g>
<g >
<title>runtime.usleep (2,412 samples, 23.75%)</title><rect x="206.9" y="341" width="280.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="209.92" y="351.5" >runtime.usleep</text>
</g>
<g >
<title>runtime.morestack (5 samples, 0.05%)</title><rect x="1185.7" y="565" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1188.70" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.01%)</title><rect x="101.5" y="373" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="104.55" y="383.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (2 samples, 0.02%)</title><rect x="488.5" y="357" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="491.53" y="367.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1192.77" y="479.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (539 samples, 5.31%)</title><rect x="38.9" y="373" width="62.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="41.93" y="383.5" >go_web..</text>
</g>
<g >
<title>net/http.(*conn).readRequest (1 samples, 0.01%)</title><rect x="12.7" y="549" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="15.67" y="559.5" ></text>
</g>
<g >
<title>runtime.Callers (3 samples, 0.03%)</title><rect x="1103.8" y="453" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1106.80" y="463.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.01%)</title><rect x="1138.0" y="373" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1140.95" y="383.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (2 samples, 0.02%)</title><rect x="1187.2" y="549" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1190.21" y="559.5" ></text>
</g>
<g >
<title>syscall.write (10 samples, 0.10%)</title><rect x="1134.4" y="389" width="1.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1137.35" y="399.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (91 samples, 0.90%)</title><rect x="1088.8" y="325" width="10.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1091.81" y="335.5" ></text>
</g>
<g >
<title>syscall.syscall (257 samples, 2.53%)</title><rect x="1104.3" y="373" width="29.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1107.26" y="383.5" >sy..</text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.02%)</title><rect x="1185.9" y="485" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1188.93" y="495.5" ></text>
</g>
<g >
<title>runtime.nanotime (6 samples, 0.06%)</title><rect x="1189.1" y="517" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.07" y="527.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (207 samples, 2.04%)</title><rect x="77.5" y="261" width="24.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="80.50" y="271.5" >g..</text>
</g>
<g >
<title>go_web_app/router.quickSort (410 samples, 4.04%)</title><rect x="53.9" y="325" width="47.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="56.91" y="335.5" >go_w..</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="1185.7" y="469" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1188.70" y="479.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (38 samples, 0.37%)</title><rect x="31.0" y="389" width="4.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="34.03" y="399.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.02%)</title><rect x="1187.2" y="533" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1190.21" y="543.5" ></text>
</g>
<g >
<title>runtime.mcall (400 samples, 3.94%)</title><rect x="1139.2" y="565" width="46.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1142.23" y="575.5" >runt..</text>
</g>
<g >
<title>go.uber.org/zap/buffer.(*Buffer).AppendTime (1 samples, 0.01%)</title><rect x="1134.1" y="357" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1137.12" y="367.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (14 samples, 0.14%)</title><rect x="1136.1" y="565" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1139.09" y="575.5" ></text>
</g>
<g >
<title>time.appendNano (1 samples, 0.01%)</title><rect x="1134.1" y="309" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1137.12" y="319.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.02%)</title><rect x="1084.9" y="277" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1087.86" y="287.5" ></text>
</g>
<g >
<title>time.nextStdChunk (1 samples, 0.01%)</title><rect x="1136.0" y="341" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1138.98" y="351.5" ></text>
</g>
<g >
<title>syscall.read (23 samples, 0.23%)</title><rect x="10.0" y="453" width="2.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>runtime.execute (7 samples, 0.07%)</title><rect x="1140.0" y="517" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1143.04" y="527.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (18 samples, 0.18%)</title><rect x="1183.4" y="485" width="2.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.38" y="495.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (194 samples, 1.91%)</title><rect x="184.1" y="325" width="22.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="187.15" y="335.5" >r..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (3 samples, 0.03%)</title><rect x="1102.1" y="373" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1105.05" y="383.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (8 samples, 0.08%)</title><rect x="1141.3" y="485" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1144.32" y="495.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (18 samples, 0.18%)</title><rect x="99.5" y="133" width="2.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="102.46" y="143.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (119 samples, 1.17%)</title><rect x="1088.2" y="373" width="13.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1091.23" y="383.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.02%)</title><rect x="1139.2" y="533" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1142.23" y="543.5" ></text>
</g>
<g >
<title>syscall.write (28 samples, 0.28%)</title><rect x="12.8" y="453" width="3.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="15.79" y="463.5" ></text>
</g>
<g >
<title>runtime.osyield (4,366 samples, 42.99%)</title><rect x="575.1" y="357" width="507.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="578.08" y="367.5" >runtime.osyield</text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.01%)</title><rect x="1185.7" y="453" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1188.70" y="463.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (361 samples, 3.55%)</title><rect x="59.6" y="309" width="41.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="62.61" y="319.5" >go_..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).JSON (3 samples, 0.03%)</title><rect x="16.0" y="469" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="19.04" y="479.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.01%)</title><rect x="184.0" y="341" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="187.03" y="351.5" ></text>
</g>
<g >
<title>runtime.suspendG (1 samples, 0.01%)</title><rect x="1187.1" y="485" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.10" y="495.5" ></text>
</g>
<g >
<title>net.(*conn).Read (23 samples, 0.23%)</title><rect x="10.0" y="501" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>runtime.preemptPark (1 samples, 0.01%)</title><rect x="1186.2" y="533" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1189.17" y="543.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="1185.5" y="485" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1188.47" y="495.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (35 samples, 0.34%)</title><rect x="77.6" y="245" width="4.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="80.61" y="255.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (48 samples, 0.47%)</title><rect x="54.0" y="309" width="5.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="57.03" y="319.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.01%)</title><rect x="1186.2" y="469" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1189.17" y="479.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.01%)</title><rect x="1104.1" y="405" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1107.15" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Read (14 samples, 0.14%)</title><rect x="1136.1" y="549" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1139.09" y="559.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (61 samples, 0.60%)</title><rect x="94.5" y="181" width="7.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="97.46" y="191.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (9,693 samples, 95.43%)</title><rect x="10.0" y="565" width="1126.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.01%)</title><rect x="1138.9" y="485" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1141.88" y="495.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (3 samples, 0.03%)</title><rect x="1087.4" y="261" width="0.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1090.42" y="271.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).safeAddString (1 samples, 0.01%)</title><rect x="1135.6" y="373" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1138.63" y="383.5" ></text>
</g>
<g >
<title>runtime.semasleep (196 samples, 1.93%)</title><rect x="184.1" y="341" width="22.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="187.15" y="351.5" >r..</text>
</g>
<g >
<title>runtime.lock2 (215 samples, 2.12%)</title><rect x="181.9" y="357" width="25.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="184.94" y="367.5" >r..</text>
</g>
<g >
<title>go_web_app/router.quickSort (1 samples, 0.01%)</title><rect x="101.4" y="53" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="104.43" y="63.5" ></text>
</g>
<g >
<title>runtime.usleep (4,366 samples, 42.99%)</title><rect x="575.1" y="341" width="507.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="578.08" y="351.5" >runtime.usleep</text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.01%)</title><rect x="1141.1" y="437" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1144.09" y="447.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.01%)</title><rect x="1186.2" y="501" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1189.17" y="511.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.addFields (4 samples, 0.04%)</title><rect x="1135.5" y="437" width="0.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1138.51" y="447.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.01%)</title><rect x="1185.7" y="501" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1188.70" y="511.5" ></text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (4,927 samples, 48.51%)</title><rect x="531.0" y="405" width="572.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="534.05" y="415.5" >sync.(*Mutex).unlockSlow</text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.03%)</title><rect x="1187.4" y="469" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1190.44" y="479.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.01%)</title><rect x="16.0" y="405" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="19.04" y="415.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.01%)</title><rect x="1138.0" y="405" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1140.95" y="415.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (10 samples, 0.10%)</title><rect x="1083.0" y="357" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1086.00" y="367.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (6 samples, 0.06%)</title><rect x="1189.1" y="501" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.07" y="511.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.01%)</title><rect x="1185.7" y="517" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1188.70" y="527.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.01%)</title><rect x="1104.0" y="357" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1107.03" y="367.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (9,360 samples, 92.15%)</title><rect x="16.0" y="485" width="1087.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="19.04" y="495.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>os.(*File).write (257 samples, 2.53%)</title><rect x="1104.3" y="421" width="29.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1107.26" y="431.5" >os..</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AppendString (1 samples, 0.01%)</title><rect x="1135.9" y="389" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1138.86" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (23 samples, 0.23%)</title><rect x="10.0" y="549" width="2.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (9,641 samples, 94.92%)</title><rect x="16.0" y="517" width="1120.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="19.04" y="527.5" >github.com/gin-gonic/gin.(*Context).Next</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.encodeTimeLayout (1 samples, 0.01%)</title><rect x="1134.1" y="373" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1137.12" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.01%)</title><rect x="101.5" y="405" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="104.55" y="415.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.01%)</title><rect x="1186.2" y="485" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1189.17" y="495.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (28 samples, 0.28%)</title><rect x="12.8" y="485" width="3.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="15.79" y="495.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (28 samples, 0.28%)</title><rect x="12.8" y="517" width="3.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="15.79" y="527.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1141.2" y="469" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1144.21" y="479.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (2,932 samples, 28.87%)</title><rect x="174.5" y="389" width="340.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="177.51" y="399.5" >sync.runtime_SemacquireMutex</text>
</g>
<g >
<title>math/rand.(*Rand).Intn (8,617 samples, 84.84%)</title><rect x="102.4" y="453" width="1001.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="105.36" y="463.5" >math/rand.(*Rand).Intn</text>
</g>
<g >
<title>runtime.(*pallocBits).find (1 samples, 0.01%)</title><rect x="101.5" y="309" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="104.55" y="319.5" ></text>
</g>
<g >
<title>syscall.syscall (28 samples, 0.28%)</title><rect x="12.8" y="437" width="3.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="15.79" y="447.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (22 samples, 0.22%)</title><rect x="1187.4" y="549" width="2.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.44" y="559.5" ></text>
</g>
<g >
<title>runtime.cansemacquire (2 samples, 0.02%)</title><rect x="532.7" y="373" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="535.68" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.01%)</title><rect x="1187.3" y="469" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1190.33" y="479.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.01%)</title><rect x="1185.7" y="485" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1188.70" y="495.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.01%)</title><rect x="1187.3" y="501" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1190.33" y="511.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int63 (8,587 samples, 84.54%)</title><rect x="105.8" y="437" width="997.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="108.85" y="447.5" >math/rand.(*Rand).Int63</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.EntryCaller.TrimmedPath (1 samples, 0.01%)</title><rect x="1134.2" y="405" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1137.24" y="415.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.01%)</title><rect x="1185.8" y="485" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1188.82" y="495.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (42 samples, 0.41%)</title><rect x="65.9" y="277" width="4.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="68.88" y="287.5" ></text>
</g>
<g >
<title>strconv.AppendFloat (1 samples, 0.01%)</title><rect x="1135.5" y="341" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1138.51" y="351.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (1 samples, 0.01%)</title><rect x="101.4" y="37" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="104.43" y="47.5" ></text>
</g>
<g >
<title>runtime.ready (22 samples, 0.22%)</title><rect x="1187.4" y="533" width="2.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1190.44" y="543.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*ioCore).Write (274 samples, 2.70%)</title><rect x="1104.3" y="453" width="31.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1107.26" y="463.5" >go..</text>
</g>
<g >
<title>runtime.lock2 (363 samples, 3.57%)</title><rect x="532.9" y="357" width="42.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="535.91" y="367.5" >run..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1187.0" y="469" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1189.98" y="479.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (51 samples, 0.50%)</title><rect x="1082.3" y="373" width="5.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1085.30" y="383.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (23 samples, 0.23%)</title><rect x="10.0" y="533" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>runtime.scanobject (8 samples, 0.08%)</title><rect x="1138.3" y="501" width="0.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1141.30" y="511.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (1 samples, 0.01%)</title><rect x="12.7" y="533" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="15.67" y="543.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (57 samples, 0.56%)</title><rect x="70.9" y="261" width="6.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="73.88" y="271.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.01%)</title><rect x="181.8" y="357" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="184.82" y="367.5" ></text>
</g>
<g >
<title>syscall.read (14 samples, 0.14%)</title><rect x="1136.1" y="501" width="1.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1139.09" y="511.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (3,462 samples, 34.08%)</title><rect x="113.2" y="421" width="402.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="116.16" y="431.5" >sync.(*Mutex).Lock</text>
</g>
<g >
<title>time.appendInt (1 samples, 0.01%)</title><rect x="1134.1" y="293" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1137.12" y="303.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.01%)</title><rect x="1141.1" y="469" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1144.09" y="479.5" ></text>
</g>
<g >
<title>runtime.funcline1 (1 samples, 0.01%)</title><rect x="1104.1" y="437" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1107.15" y="447.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (28 samples, 0.28%)</title><rect x="12.8" y="549" width="3.2" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="15.79" y="559.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (13 samples, 0.13%)</title><rect x="1137.7" y="565" width="1.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1140.72" y="575.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.01%)</title><rect x="1134.2" y="373" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1137.24" y="383.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (5,062 samples, 49.84%)</title><rect x="515.4" y="421" width="588.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="518.37" y="431.5" >sync.(*Mutex).Unlock</text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.03%)</title><rect x="1187.4" y="501" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1190.44" y="511.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (2 samples, 0.02%)</title><rect x="488.9" y="357" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="491.88" y="367.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).Add (2 samples, 0.02%)</title><rect x="1087.8" y="277" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1090.77" y="287.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Engine).ServeHTTP (9,641 samples, 94.92%)</title><rect x="16.0" y="533" width="1120.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="19.04" y="543.5" >github.com/gin-gonic/gin.(*Engine).ServeHTTP</text>
</g>
<g >
<title>go_web_app/router.partition (3 samples, 0.03%)</title><rect x="100.6" y="101" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="103.62" y="111.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Load (9 samples, 0.09%)</title><rect x="1102.4" y="373" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1105.40" y="383.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (101 samples, 0.99%)</title><rect x="89.8" y="213" width="11.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="92.81" y="223.5" ></text>
</g>
<g >
<title>runtime.callers (3 samples, 0.03%)</title><rect x="1103.8" y="437" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1106.80" y="447.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1169.8" y="501" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1172.79" y="511.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (108 samples, 1.06%)</title><rect x="1170.8" y="485" width="12.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1173.83" y="495.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (1 samples, 0.01%)</title><rect x="101.3" y="53" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="104.31" y="63.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (8 samples, 0.08%)</title><rect x="98.5" y="133" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="101.53" y="143.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (26 samples, 0.26%)</title><rect x="86.8" y="213" width="3.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="89.79" y="223.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (30 samples, 0.30%)</title><rect x="35.4" y="373" width="3.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="38.44" y="383.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (22 samples, 0.22%)</title><rect x="16.6" y="453" width="2.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="19.62" y="463.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="1187.2" y="501" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1190.21" y="511.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (6 samples, 0.06%)</title><rect x="1101.4" y="325" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1104.36" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot (3 samples, 0.03%)</title><rect x="1186.9" y="517" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1189.86" y="527.5" ></text>
</g>
<g >
<title>net.(*conn).Write (28 samples, 0.28%)</title><rect x="12.8" y="501" width="3.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="15.79" y="511.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.01%)</title><rect x="1139.3" y="501" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1142.35" y="511.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="1186.9" y="485" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1189.86" y="495.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (1 samples, 0.01%)</title><rect x="1134.1" y="341" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1137.12" y="351.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.01%)</title><rect x="1187.2" y="485" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1190.21" y="495.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (45 samples, 0.44%)</title><rect x="169.2" y="373" width="5.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="172.16" y="383.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.01%)</title><rect x="1103.9" y="373" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1106.91" y="383.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (307 samples, 3.02%)</title><rect x="65.9" y="293" width="35.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="68.88" y="303.5" >go_..</text>
</g>
<g >
<title>sync.runtime_canSpin (2 samples, 0.02%)</title><rect x="515.1" y="389" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="518.13" y="399.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.01%)</title><rect x="1141.1" y="485" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1144.09" y="495.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (2 samples, 0.02%)</title><rect x="1139.0" y="485" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1142.00" y="495.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (37 samples, 0.36%)</title><rect x="38.9" y="357" width="4.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="41.93" y="367.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*stacktrace).Next (1 samples, 0.01%)</title><rect x="1104.1" y="469" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1107.15" y="479.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (25 samples, 0.25%)</title><rect x="90.0" y="197" width="2.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="93.05" y="207.5" ></text>
</g>
<g >
<title>runtime.scanstack (4 samples, 0.04%)</title><rect x="1137.7" y="469" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1140.72" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (32 samples, 0.32%)</title><rect x="1186.3" y="565" width="3.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1189.28" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (1 samples, 0.01%)</title><rect x="101.5" y="421" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="104.55" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (34 samples, 0.33%)</title><rect x="1084.3" y="325" width="3.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1087.28" y="335.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (2 samples, 0.02%)</title><rect x="181.7" y="373" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="184.71" y="383.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.05%)</title><rect x="1085.1" y="277" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1088.09" y="287.5" ></text>
</g>
<g >
<title>syscall.Write (257 samples, 2.53%)</title><rect x="1104.3" y="405" width="29.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1107.26" y="415.5" >sy..</text>
</g>
<g >
<title>runtime.procyield (4 samples, 0.04%)</title><rect x="535.6" y="341" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="538.58" y="351.5" ></text>
</g>
<g >
<title>go.uber.org/zap.(*Logger).Info (281 samples, 2.77%)</title><rect x="1103.4" y="485" width="32.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1106.45" y="495.5" >go..</text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.01%)</title><rect x="1186.2" y="517" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1189.17" y="527.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*CheckedEntry).Write (274 samples, 2.70%)</title><rect x="1104.3" y="469" width="31.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1107.26" y="479.5" >go..</text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.03%)</title><rect x="1170.0" y="517" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1173.02" y="527.5" ></text>
</g>
<g >
<title>runtime.cansemacquire (62 samples, 0.61%)</title><rect x="174.5" y="373" width="7.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="177.51" y="383.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="1138.1" y="405" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1141.07" y="415.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.01%)</title><rect x="1104.1" y="421" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1107.15" y="431.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1141.2" y="501" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1144.21" y="511.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (31 samples, 0.31%)</title><rect x="510.4" y="325" width="3.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="513.37" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.03%)</title><rect x="1103.8" y="421" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1106.80" y="431.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.01%)</title><rect x="181.7" y="357" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="184.71" y="367.5" ></text>
</g>
<g >
<title>runtime.findRunnable (249 samples, 2.45%)</title><rect x="1140.9" y="517" width="28.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1143.86" y="527.5" >ru..</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.SecondsDurationEncoder (1 samples, 0.01%)</title><rect x="1135.5" y="373" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1138.51" y="383.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (4,729 samples, 46.56%)</title><rect x="532.9" y="373" width="549.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="535.91" y="383.5" >runtime.lockWithRank</text>
</g>
<g >
<title>net/http.(*connReader).Read (23 samples, 0.23%)</title><rect x="10.0" y="517" width="2.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>runtime.nanotime (4 samples, 0.04%)</title><rect x="1140.4" y="501" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1143.39" y="511.5" ></text>
</g>
<g >
<title>github.com/natefinch/lumberjack.(*Logger).Write (257 samples, 2.53%)</title><rect x="1104.3" y="437" width="29.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1107.26" y="447.5" >gi..</text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).EncodeEntry (2 samples, 0.02%)</title><rect x="1134.1" y="437" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1137.12" y="447.5" ></text>
</g>
<g >
<title>runtime.nanotime (3 samples, 0.03%)</title><rect x="1139.5" y="533" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1142.46" y="543.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (2 samples, 0.02%)</title><rect x="488.3" y="357" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="491.30" y="367.5" ></text>
</g>
<g >
<title>syscall.Read (14 samples, 0.14%)</title><rect x="1136.1" y="517" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1139.09" y="527.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (35 samples, 0.34%)</title><rect x="1084.2" y="357" width="4.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1087.16" y="367.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.02%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1192.77" y="527.5" ></text>
</g>
<g >
<title>runtime.schedule (264 samples, 2.60%)</title><rect x="1139.8" y="533" width="30.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1142.81" y="543.5" >ru..</text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.03%)</title><rect x="1185.8" y="517" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1188.82" y="527.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.01%)</title><rect x="1104.0" y="373" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1107.03" y="383.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="1187.2" y="517" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.21" y="527.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (131 samples, 1.29%)</title><rect x="1170.5" y="533" width="15.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1173.48" y="543.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (4 samples, 0.04%)</title><rect x="1137.7" y="485" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1140.72" y="495.5" ></text>
</g>
<g >
<title>runtime.(*Frames).Next (1 samples, 0.01%)</title><rect x="1104.1" y="453" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1107.15" y="463.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (2 samples, 0.02%)</title><rect x="574.8" y="325" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="577.85" y="335.5" ></text>
</g>
<g >
<title>runtime.semacreate (1 samples, 0.01%)</title><rect x="536.0" y="341" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="539.05" y="351.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).findSmallN (1 samples, 0.01%)</title><rect x="101.5" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="104.55" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.01%)</title><rect x="1185.8" y="469" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1188.82" y="479.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.01%)</title><rect x="1139.3" y="517" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1142.35" y="527.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).AddDuration (2 samples, 0.02%)</title><rect x="1135.5" y="405" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1138.51" y="415.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.77" y="495.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (4 samples, 0.04%)</title><rect x="1140.4" y="485" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1143.39" y="495.5" ></text>
</g>
<g >
<title>os.(*File).write (10 samples, 0.10%)</title><rect x="1134.4" y="421" width="1.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1137.35" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="101.5" y="389" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="104.55" y="399.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (1 samples, 0.01%)</title><rect x="1187.2" y="469" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1190.21" y="479.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (3 samples, 0.03%)</title><rect x="101.2" y="85" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="104.20" y="95.5" ></text>
</g>
<g >
<title>runtime.goready (34 samples, 0.33%)</title><rect x="1084.3" y="341" width="3.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1087.28" y="351.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="1138.2" y="469" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1141.19" y="479.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.ShortCallerEncoder (1 samples, 0.01%)</title><rect x="1134.2" y="421" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1137.24" y="431.5" ></text>
</g>
<g >
<title>runtime.acquirem (3 samples, 0.03%)</title><rect x="1084.3" y="293" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1087.28" y="303.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Render (2 samples, 0.02%)</title><rect x="16.0" y="453" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="19.04" y="463.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (1 samples, 0.01%)</title><rect x="1134.2" y="325" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1137.24" y="335.5" ></text>
</g>
<g >
<title>runtime.wakep (9 samples, 0.09%)</title><rect x="1086.7" y="277" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1089.72" y="287.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.Field.AddTo (4 samples, 0.04%)</title><rect x="1135.5" y="421" width="0.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1138.51" y="431.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (1 samples, 0.01%)</title><rect x="1136.0" y="373" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1138.98" y="383.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (6 samples, 0.06%)</title><rect x="99.9" y="117" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="102.92" y="127.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (265 samples, 2.61%)</title><rect x="70.8" y="277" width="30.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="73.76" y="287.5" >go..</text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.01%)</title><rect x="1141.2" y="485" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1144.21" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.13%)</title><rect x="1137.7" y="549" width="1.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1140.72" y="559.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (1 samples, 0.01%)</title><rect x="101.5" y="341" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="104.55" y="351.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (3 samples, 0.03%)</title><rect x="101.2" y="69" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="104.20" y="79.5" ></text>
</g>
<g >
<title>runtime.runqput (2 samples, 0.02%)</title><rect x="1085.8" y="277" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1088.79" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (11 samples, 0.11%)</title><rect x="1187.8" y="485" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1190.79" y="495.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.01%)</title><rect x="101.5" y="453" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="104.55" y="463.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*jsonEncoder).addKey (1 samples, 0.01%)</title><rect x="1135.6" y="389" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1138.63" y="399.5" ></text>
</g>
<g >
<title>go_web_app/router.quickSort (41 samples, 0.40%)</title><rect x="96.8" y="165" width="4.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="99.78" y="175.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (37 samples, 0.36%)</title><rect x="19.2" y="437" width="4.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="22.18" y="447.5" ></text>
</g>
<g >
<title>go.uber.org/zap/zapcore.(*CheckedEntry).AddCore (1 samples, 0.01%)</title><rect x="1103.4" y="437" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1106.45" y="447.5" ></text>
</g>
<g >
<title>go_web_app/router.partition (54 samples, 0.53%)</title><rect x="59.6" y="293" width="6.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="62.61" y="303.5" ></text>
</g>
<g >
<title>runtime.semawakeup (114 samples, 1.12%)</title><rect x="1088.8" y="341" width="13.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1091.81" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrain (3 samples, 0.03%)</title><rect x="1186.9" y="533" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1189.86" y="543.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.01%)</title><rect x="1187.1" y="469" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1190.10" y="479.5" ></text>
</g>
<g >
<title>runtime.nanotime (8 samples, 0.08%)</title><rect x="1141.3" y="501" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1144.32" y="511.5" ></text>
</g>
<g >
<title>runtime.netpoll (237 samples, 2.33%)</title><rect x="1142.3" y="501" width="27.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1145.25" y="511.5" >r..</text>
</g>
<g >
<title>syscall.write (257 samples, 2.53%)</title><rect x="1104.3" y="389" width="29.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1107.26" y="399.5" >sy..</text>
</g>
<g >
<title>bufio.(*Writer).Flush (28 samples, 0.28%)</title><rect x="12.8" y="533" width="3.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="15.79" y="543.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.01%)</title><rect x="1138.2" y="485" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1141.19" y="495.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (4,913 samples, 48.37%)</title><rect x="532.7" y="389" width="570.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="535.68" y="399.5" >sync.runtime_Semrelease</text>
</g>
<g >
<title>go_web_app/router.partition (16 samples, 0.16%)</title><rect x="94.9" y="165" width="1.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="97.92" y="175.5" ></text>
</g>
</g>
</svg>
